buildscript {
    ext {
        kotlinVersion = '1.2.10'
        springBootVersion = '1.5.9.RELEASE'
        springDataVersion = 'Ingalls-RELEASE'
        dynamoDbVersion = '1.11.86'
        springDataDynamoDbVersion = '4.5.2'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}")
    }
}

//apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: "kotlin-noarg"
apply plugin: 'eclipse'

apply plugin: 'org.springframework.boot'

noArg {
    annotation("com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable")
}

group = 'tk.germanbot'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

repositories {
    mavenCentral()
    maven {
        url "https://s3-us-west-2.amazonaws.com/dynamodb-local/release"
    }
}

springBoot {
    mainClass = 'tk.germanbot.ApplicationKt'
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    compile("org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}")
    compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
    // dynamo db
    compile("org.springframework.data:spring-data-releasetrain:${springDataVersion}")
    compile("com.amazonaws:aws-java-sdk-dynamodb:${dynamoDbVersion}")
    compile("com.github.derjust:spring-data-dynamodb:${springDataDynamoDbVersion}")
    // facebook messenger wrapper
    compile('com.github.messenger4j:messenger4j:0.8.0')
    // configuration properties
    compile "org.springframework.boot:spring-boot-configuration-processor"

    testCompile "com.amazonaws:DynamoDBLocal:${dynamoDbVersion}"
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile('com.nhaarman:mockito-kotlin:1.5.0')
    // https://mvnrepository.com/artifact/log4j/log4j

}

compileJava.dependsOn(processResources)

bootRepackage {
}

task dockerPublish(dependsOn: bootRepackage) {
    ext.repo = 'juntacr'
    doLast {
        def imageName = "${repo}/${project.group}"
        exec {
            commandLine 'docker'
            args "build . -t ${imageName}".split(" ")
        }
        exec {
            commandLine 'docker'
            args "push ${imageName}".split(" ")
        }
    }
}

task copyNativeDeps(type: Copy) {
    from(configurations.compile + configurations.testCompile) {
        include '*.dll'
        include '*.dylib'
        include '*.so'
    }
    into 'build/libs'
}

test {
    dependsOn copyNativeDeps
    systemProperty "java.library.path", 'build/libs'
}
