package tk.germanbot.data

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperFieldModel.DynamoDBAttributeType.S
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTyped
import org.socialsignin.spring.data.dynamodb.repository.EnableScan
import org.springframework.data.repository.CrudRepository
import java.util.Date

@DynamoDBTable(tableName = "translation")
data class Quiz(
        @DynamoDBHashKey
        @DynamoDBAutoGeneratedKey
        var id: String? = null,
        @DynamoDBAttribute
        @DynamoDBTyped(S)
        var date: Date? = Date(),
        @DynamoDBAttribute
        var question: String?,
        @DynamoDBAttribute
        var answers: Set<String>?,
        @DynamoDBAttribute
        var topics: Set<String>?
)

@EnableScan
interface QuizRepository : CrudRepository<Quiz, String> {
    fun findOneById(id: String): Quiz

    override fun findAll(): List<Quiz>

    fun findByTopicsContaining(topics: String): List<Quiz>
}

